/*
 * This source file is part of the Argon project.
 *
 * Licensed under the Apache License v2.0
*/

from "argon:io" import *
from "io/bufio" import BufferedReader

pub var stdin = openfd(STDIN_NO, O_READ)
pub var stdout = openfd(STDOUT_NO, O_WRITE)
pub var stderr = openfd(STDERR_NO, O_WRITE)

# TODO: Check for unbuffered mode
stdin = BufferedReader(stdin)

# Read only backup
pub let __stdin = stdin
pub let __stdout = stdout
pub let __stderr = stderr

func _print(stream, args, sep, end) {
    # Use currying evaluation to avoid loading
    # the same method over and over while printing args.
    var out = stream.write()

    var psep = false

    if args != nil {
        for var arg of args {
            psep ? out(sep)
            psep = true

            out(str(arg))
        }
    }

    out(end)
}

pub func input(prompt=nil) {
	prompt ? print(prompt, end="")
	return stdin.readline(-1)
}

pub func perror(sep=" ", end="\n", ...args) {
    _print(stderr, args, sep, end)
}

pub func print(sep=" ", end="\n", ...args) {
	_print(stdout, args, sep, end)
}
